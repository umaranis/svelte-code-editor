.codemirror-wrapper {
	height: 100%;
}

.cm-editor {
	color: var(--shiki-color-text);
	background-color: transparent;
	height: 100%;

	&.cm-focused {
		outline: none;

		.cm-cursor {
			border-left-color: var(--sk-fg-3);
		}

		> .cm-scroller > .cm-selectionLayer .cm-selectionBackground,
		.cm-selectionBackground,
		.cm-content ::selection {
			background-color: var(--sk-bg-selection);
		}

		.cm-matchingBracket,
		.cm-nonmatchingBracket {
			background-color: #bad0f847;
		}
	}

	.cm-scroller {
		font: var(--sk-font-mono);
	}

	.cm-gutters {
		background: var(--sk-bg-3);
		border: none;
		padding: 0;
		width: 5rem;
	}

	.cm-activeLine {
		background: inherit;
	}

	.cm-foldGutter {
		width: 1.4rem;
	}

	.cm-activeLineGutter {
		/* this must be translucent, or it will obscure the selection */
		background: hsl(0, 0%, 0%, 0.04);

		:root.dark & {
			background: hsl(0, 0%, 100%, 0.04);
		}
	}

	.cm-gutterElement {
		position: relative;

		&:where(:has([title='Fold line']), :has([title='Unfold line']))::after {
			content: '';
			position: absolute;
			width: 100%;
			right: 0;
			top: 0;
			height: 2.4rem;
			background: url($lib/icons/chevron.svg) no-repeat 50% 50%;
			background-size: contain;
			transition: transform 0.2s;
			cursor: pointer;
		}

		&:has([title='Unfold line'])::after {
			transform: rotate(-90deg);
		}

		span {
			color: transparent;
		}
	}

	.cm-lineNumbers {
		flex: 1;

		.cm-gutterElement:not(:last-child) {
			display: flex;
			justify-content: end;
			align-items: end;
		}
	}

	.cm-foldPlaceholder {
		background-color: transparent;
		border: none;
		color: #ddd;
	}

	.cm-lintRange {
		background-position: left bottom;
		background-repeat: repeat-x;
		padding-bottom: 4px;

		&.cm-lintRange-error {
			/* TODO */
		}

		&.cm-lintRange-warning {
			/* TODO */
		}
	}

	.cm-content {
		padding: 0.4rem 0;
	}

	.cm-line {
		padding: 0 1rem;
	}

	.cm-selectionBackground {
		border-radius: 2px;
	}

	.cm-selectionMatch {
		background: var(--selection-color);
		color: var(--sk-fg-2);
	}

	.cm-tooltip.cm-tooltip-autocomplete {
		color: var(--sk-fg-3) !important;
		perspective: 1px;

		& > ul > li[aria-selected] {
			background-color: var(--sk-bg-4);
			color: var(--sk-fg-2) !important;
		}

		& > ul {
			font: var(--sk-font-mono);
		}
	}

	.cm-panels {
		font: var(--sk-font-ui-small);
		background: var(--sk-bg-2);
		color: inherit;

		&.cm-panels-top,
		&.cm-panels-bottom {
			border-top: 1px solid var(--sk-border);
			border-bottom: 1px solid var(--sk-border);
		}

		.cm-panel {
			display: flex;
			flex-wrap: wrap;
			gap: 0.5rem;
			padding: 0.5rem 4.2rem 0.5rem 0.5rem;

			.cm-button,
			button[aria-label='close'] {
				margin: 0;
				font: inherit;
				background: inherit;
				height: 3.2rem;
				padding: 0 0.8rem;
				border-style: solid;
				border-width: var(--sk-raised-width);
				border-color: var(--sk-raised-color);
				border-radius: var(--sk-border-radius);

				&:hover {
					border-color: var(--sk-raised-hover-color);
				}

				&:active {
					border-color: var(--sk-raised-active-color);
					border-width: var(--sk-raised-active-width);
				}
			}

			button[aria-label='close'] {
				aspect-ratio: 1;
				top: 0.5rem;
				right: 0.5rem;
				color: transparent;
				background: url(./close-light.svg) 50% 50% no-repeat;
				background-size: 1.8rem;

				:root.dark & {
					background-image: url(./close-dark.svg);
				}
			}

			.cm-textfield {
				font: inherit;
				background: inherit;
				color: inherit;
				border: 1px solid var(--sk-border);
				border-radius: var(--sk-border-radius);
				margin: 0;
			}

			.cm-search button:focus-visible,
			.cm-search input:focus-visible {
				border: 2px solid var(--flash);
			}

			.cm-search input[type='checkbox']:focus-visible {
				outline: 2px solid var(--flash);
			}

			label {
				font: inherit;
				display: inline-flex;
				gap: 0.5rem;
				align-items: center;
				margin: 0 0 0 0.5rem;
			}
		}
	}

	.cm-searchMatch.cm-searchMatch-selected {
		background-color: #6199ff2f;
	}

	.cm-tooltip {
		--warning: hsl(40 100% 70%);
		--error: hsl(0 100% 90%);
		border: none;
		background: var(--sk-bg-3);
		font: var(--sk-font-ui-small);
		max-width: calc(100vw - 10em);
		position: relative;
		padding: 1rem;
		filter: var(--sk-shadow);

		:root.dark {
			--warning: hsl(40 100% 50%);
			--error: hsl(0 100% 70%);
		}

		&:has(.cm-diagnostic) {
			background: transparent;
		}

		&:has(.cm-diagnostic-warning) {
			--bg: var(--warning);
			--fg: #222;
		}

		&:has(.cm-diagnostic-error) {
			--bg: var(--error);
			--fg: #222;
		}

		.cm-tooltip-section {
			position: relative;
			/* left: -1rem; */
			padding: 1rem;
			background: var(--bg);
			border-radius: 2px;
			max-width: 64em;

			.cm-diagnostic {
				padding: 0;
				margin: 0;
				position: relative;
				border: none;
				border-radius: var(--sk-border-radius);

				&:not(:last-child) {
					border-bottom: 1px solid rgba(0, 0, 0, 0.1);
					margin-bottom: 1rem;
					padding-bottom: 1rem;
				}

				:not(code) {
					font: var(--sk-font-ui-small);
				}

				.cm-diagnosticText {
					position: relative;
					display: flex;
					color: var(--fg);
					z-index: 2;

					code {
						color: inherit;
						background-color: rgba(0, 0, 0, 0.05);
						font-size: 1em;
						margin: 0; /* TODO this counteracts base styles that should probably be deleted? */
						padding: 0.2rem 0.4rem;
					}

					a {
						font: var(--sk-font-mono);
						color: inherit;
						font-size: 1em;
						/* opacity: 0.7; */
						text-decoration: underline;
					}
				}
			}
		}
	}

	.highlight {
		background: var(--sk-bg-highlight);
		padding: 4px 0;
	}
}
